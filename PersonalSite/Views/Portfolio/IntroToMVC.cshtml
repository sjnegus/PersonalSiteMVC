@{
    ViewData["Title"] = "Full Stack Website";
}

<!-- Page Content-->
<section class="py-5">
    <div class="container px-5 my-5">
        <div class="row gx-2 justify-content-center" id="dd-text">
            <div class="col-lg-6">
                <div class="text-center mb-3 mt-3">
                    <h1 class="fw-bolder">Full Stack Website</h1>
                    <p class="lead fw-normal mb-0">

                    </p>
                </div>
            </div>
        </div>
        <div class="bg-secondary rounded-3 shadow row gx-5 my-5">
            <div class="col-12">
                <div id="carouselExampleAutoplaying" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="~/images/StoreFront-Home.png" class="d-block w-100 img-fluid shadow rounded-3 my-5" alt="...">
                        </div>
                        <div class="carousel-item">
                            <img src="~/images/StoreFront-TileView.png" class="d-block w-100 img-fluid shadow rounded-3 my-5" alt="...">
                        </div>
                        <div class="carousel-item">
                            <img src="~/images/StoreFront-ShoppingCart.png" class="d-block w-100 img-fluid shadow rounded-3 my-5" alt="...">
                        </div>
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <img class="img-fluid shadow rounded-3 mb-5" src="~/images/StoreFront-ManageAccount.png" alt="..." />
                </div>
                <div class="col-lg-12">
                    <img class="img-fluid shadow rounded-3 mb-5" src="~/images/StoreFront-ProductDetails.png" alt="..." />
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <img class="img-fluid shadow rounded-3 mb-5" src="~/images/StoreFront-AdminRole.png" alt="..." />
                </div>
                <div class="col-lg-12">
                    <img class="img-fluid shadow rounded-3 mb-5" src="~/images/StoreFront-Contact.png" alt="..." />
                </div>
            </div>
        </div>
        <div class="row-cols-xxl-auto  gx-2 justify-content-center" id="dd-text">
            <div class="col-lg-6">
                <div class="text-center mb-5">
                    <p class="lead fw-normal p-5">
                        <!--
                            DETAILED EXPLANATION OF HOW SITE WAS BUILT
                        -->
                        This is a store front website created using MVC framework. It was designed using a Bootstrap layout for the front-end design and is fully connected to a custom database using SQL Server in the back-end. I have implemented different roles for different users such as Admin and Customer and adjusted the accessibility accordingly. The site has full contact functionallity as well as a shopping cart and the ability to check-out.
                        <br />
                        <h2>Key Features:</h2>
                        <br />
                        <br />
                        <h4>MVC Architecture:</h4>

                    <p class="lead fw-normal px-5">
                        The foundation of this web application lies in the MVC architecture, emphasizing a clear separation of concerns between the Model (data), View (user interface), and Controller (application logic). This architectural pattern promotes maintainability and scalability, essential for building modern, dynamic web applications.

                    </p>
                    <br />
                    <br />
                    <h4>Full Contact Functionality:</h4>

                    <p class="lead fw-normal px-5">
                        Explore a fully functional Contact module that demonstrates how to handle user input, interact with the database, and present information to the user. Learn how to create, read, update, and delete contact records seamlessly.
                    </p>
                    <br />
                    <br />
                    <h4>HTML, C#, CSS, and SQL:</h4>

                    <p class="lead fw-normal px-5">
                        Delve into the codebase written in HTML for the structure, C# for the server-side logic, CSS for styling, and SQL for managing the database. Each language plays a crucial role in the MVC framework, showcasing how they work together harmoniously.
                    </p>
                    <br />
                    <br />
                    <h4>SQL Database Connectivity:</h4>

                    <p class="lead fw-normal px-5">
                        Experience the power of SQL connectivity as the application seamlessly interacts with a relational database. Learn how to establish connections, execute queries, and handle data persistence within an MVC context.
                    </p>
                    <br />
                    <br />
                    <h4>CRUD Functionality:</h4>

                    <p class="lead fw-normal px-5">
                        Master the fundamentals of Create, Read, Update, and Delete (CRUD) operations in the MVC architecture. This application serves as a practical guide to implementing CRUD functionality, a cornerstone of dynamic web applications.  Learn how to create, read, update, and delete Category records seamlessly.
                    </p>
                                  
                    
                </div>
            </div>
        </div>
    </div>
</section>
